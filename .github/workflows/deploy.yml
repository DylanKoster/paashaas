on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - run: cd paas-haas && sam build
      - run: cd paas-haas && ls -al
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sam-build
          path: paas-haas/.aws-sam/
          include-hidden-files: true
          retention-days: 1
          if-no-files-found: error

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: sam-build
          path: paas-haas/.aws-sam

      - uses: actions/setup-python@v3

      - uses: aws-actions/setup-sam@v2
        with:
          python-version: "3.13"

      - name: Setup local DynamoDB
        run: |
          docker run -p 8000:8000 amazon/dynamodb-local &
          sleep 20
          aws dynamodb create-table --table-name Stores --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 --endpoint-url http://localhost:8000

      - name: Run tests
        run: |
          cd paas-haas && sam local start-api > sam_api.log 2>&1 &

          until curl -s http://localhost:3000/stores/; do
            echo "Waiting for API to be up..."
            sleep 5
          done

          python -m pip install -r tests/requirements.txt
          pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - run: cd paas-haas && sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --no-disable-rollback
